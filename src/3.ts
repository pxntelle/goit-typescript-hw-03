/*
  –í–∏ —Å—Ç–≤–æ—Ä—é—î—Ç–µ –≥—Ä—É, –¥–µ —î –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Ä–æ–ª—è–º–∏.
  –ó–∞—Ä–∞–∑ –≤–∏ –ø—Ä–∞—Ü—é—î—Ç–µ –Ω–∞–¥ –∫–ª–∞—Å–æ–º Wizard, —è–∫–∏–π –º–∞—î —Ä–µ–∞–ª—ñ–∑–æ–≤—É–≤–∞—Ç–∏ –¥–≤–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏ - ICharacter —Ç–∞ ISpellCaster.

  –í–∏–∑–Ω–∞—á—Ç–µ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏ ICharacter —Ç–∞ ISpellCaster —Ç–∞–∫, —â–æ–± –≤–æ–Ω–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª–∏ –≤–∏–º–æ–≥–∞–º –∫–ª–∞—Å—É Wizard. 
  –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å ICharacter –ø–æ–≤–∏–Ω–µ–Ω –≤–∫–ª—é—á–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ name —ñ level, —ñ –Ω–∞–≤—ñ—Ç—å –º–µ—Ç–æ–¥ introduce —ñ levelUp. 
  –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å ISpellCaster –ø–æ–≤–∏–Ω–µ–Ω –≤–∫–ª—é—á–∞—Ç–∏ –º–µ—Ç–æ–¥ castSpell.
*/

// —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª–∞—Å—É Wizard

interface ICharacter {
  name: string;
  level: number;

  introduce(phrase: string): void;
  levelUp(): void;
}

interface ISpellCaster {
  castSpell(): void;
}

class Wizard implements ICharacter, ISpellCaster {
  constructor(public name: string, public level: number) {
    if (this.level < 1) {
      throw new Error("Level too low");
    }
  }

  introduce(phrase: string): void {
    console.log(phrase + ", " + this.name);
  }

  castSpell(): void {
    console.log("Prepare to disapppear!");
  }

  levelUp(): void {
    this.level++;
    console.log(`Level up ${this.level}`);
  }
}

// —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–ª–∞—Å—É

const wizard = new Wizard("Merlin", 15);

wizard.introduce("I am your magical nightmare üòà");
wizard.castSpell();
wizard.levelUp();
